{"ast":null,"code":"// src/api/axios.js\nimport axios from 'axios';\n\n// Créer une instance axios configurée\nconst api = axios.create({\n  baseURL: 'not foundhttp://localhost:8000/api',\n  // Ajouter le préfixe API\n  withCredentials: false,\n  // Désactiver temporairement pour tester\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Intercepteur pour les requêtes\napi.interceptors.request.use(config => {\n  console.log(`Requête API: ${config.method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('Erreur de requête API:', error);\n  return Promise.reject(error);\n});\n\n// Intercepteur pour les réponses\napi.interceptors.response.use(response => {\n  console.log(`Réponse API: ${response.status} ${response.statusText}`);\n  return response;\n}, error => {\n  console.error('Erreur de réponse API:', error.response || error);\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","headers","interceptors","request","use","config","console","log","method","toUpperCase","url","error","Promise","reject","response","status","statusText"],"sources":["C:/Users/larad/OneDrive/Bureau/ofppt-gestion-formations/frontend/src/api/axios.js"],"sourcesContent":["// src/api/axios.js\r\nimport axios from 'axios';\r\n\r\n// Créer une instance axios configurée\r\nconst api = axios.create({\r\n  baseURL: 'not foundhttp://localhost:8000/api', // Ajouter le préfixe API\r\n  withCredentials: false, // Désactiver temporairement pour tester\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Accept': 'application/json',\r\n  },\r\n});\r\n\r\n// Intercepteur pour les requêtes\r\napi.interceptors.request.use(\r\n  config => {\r\n    console.log(`Requête API: ${config.method.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  error => {\r\n    console.error('Erreur de requête API:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Intercepteur pour les réponses\r\napi.interceptors.response.use(\r\n  response => {\r\n    console.log(`Réponse API: ${response.status} ${response.statusText}`);\r\n    return response;\r\n  },\r\n  error => {\r\n    console.error('Erreur de réponse API:', error.response || error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,oCAAoC;EAAE;EAC/CC,eAAe,EAAE,KAAK;EAAE;EACxBC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACRC,OAAO,CAACC,GAAG,CAAC,gBAAgBF,MAAM,CAACG,MAAM,CAACC,WAAW,CAAC,CAAC,IAAIJ,MAAM,CAACK,GAAG,EAAE,CAAC;EACxE,OAAOL,MAAM;AACf,CAAC,EACDM,KAAK,IAAI;EACPL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAC9C,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAd,GAAG,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC3BU,QAAQ,IAAI;EACVR,OAAO,CAACC,GAAG,CAAC,gBAAgBO,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACE,UAAU,EAAE,CAAC;EACrE,OAAOF,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACPL,OAAO,CAACK,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAAC;EAChE,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}