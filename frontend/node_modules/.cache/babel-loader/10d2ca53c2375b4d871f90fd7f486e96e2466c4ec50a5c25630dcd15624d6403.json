{"ast":null,"code":"import api from './axios';\nconst evaluationService = {\n  // Récupérer toutes les évaluations avec filtres optionnels\n  getAllEvaluations: async (filters = {}) => {\n    try {\n      const response = await api.get('/evaluations', {\n        params: filters\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des évaluations:', error);\n      throw error;\n    }\n  },\n  // Récupérer une évaluation par son ID\n  getEvaluationById: async id => {\n    try {\n      const response = await api.get(`/evaluations/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération de l'évaluation ${id}:`, error);\n      throw error;\n    }\n  },\n  // Créer une nouvelle évaluation\n  createEvaluation: async evaluationData => {\n    try {\n      const response = await api.post('/evaluations', evaluationData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la création de l\\'évaluation:', error);\n      throw error;\n    }\n  },\n  // Mettre à jour une évaluation existante\n  updateEvaluation: async (id, evaluationData) => {\n    try {\n      const response = await api.put(`/evaluations/${id}`, evaluationData);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la mise à jour de l'évaluation ${id}:`, error);\n      throw error;\n    }\n  },\n  // Supprimer une évaluation\n  deleteEvaluation: async id => {\n    try {\n      const response = await api.delete(`/evaluations/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la suppression de l'évaluation ${id}:`, error);\n      throw error;\n    }\n  },\n  // Récupérer les évaluations par formation\n  getEvaluationsByFormation: async formationId => {\n    try {\n      const response = await api.get('/evaluations', {\n        params: {\n          formation_id: formationId\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des évaluations pour la formation ${formationId}:`, error);\n      throw error;\n    }\n  }\n};\nexport default evaluationService;","map":{"version":3,"names":["api","evaluationService","getAllEvaluations","filters","response","get","params","data","error","console","getEvaluationById","id","createEvaluation","evaluationData","post","updateEvaluation","put","deleteEvaluation","delete","getEvaluationsByFormation","formationId","formation_id"],"sources":["C:/Users/larad/OneDrive/Bureau/ofppt-gestion-formations/frontend/src/api/evaluationService.js"],"sourcesContent":["import api from './axios';\n\nconst evaluationService = {\n  // Récupérer toutes les évaluations avec filtres optionnels\n  getAllEvaluations: async (filters = {}) => {\n    try {\n      const response = await api.get('/evaluations', { params: filters });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des évaluations:', error);\n      throw error;\n    }\n  },\n  \n  // Récupérer une évaluation par son ID\n  getEvaluationById: async (id) => {\n    try {\n      const response = await api.get(`/evaluations/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération de l'évaluation ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Créer une nouvelle évaluation\n  createEvaluation: async (evaluationData) => {\n    try {\n      const response = await api.post('/evaluations', evaluationData);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la création de l\\'évaluation:', error);\n      throw error;\n    }\n  },\n  \n  // Mettre à jour une évaluation existante\n  updateEvaluation: async (id, evaluationData) => {\n    try {\n      const response = await api.put(`/evaluations/${id}`, evaluationData);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la mise à jour de l'évaluation ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Supprimer une évaluation\n  deleteEvaluation: async (id) => {\n    try {\n      const response = await api.delete(`/evaluations/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la suppression de l'évaluation ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  // Récupérer les évaluations par formation\n  getEvaluationsByFormation: async (formationId) => {\n    try {\n      const response = await api.get('/evaluations', { \n        params: { formation_id: formationId } \n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des évaluations pour la formation ${formationId}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default evaluationService; "],"mappings":"AAAA,OAAOA,GAAG,MAAM,SAAS;AAEzB,MAAMC,iBAAiB,GAAG;EACxB;EACAC,iBAAiB,EAAE,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;IACzC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,cAAc,EAAE;QAAEC,MAAM,EAAEH;MAAQ,CAAC,CAAC;MACnE,OAAOC,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACvE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAE,iBAAiB,EAAE,MAAOC,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,gBAAgBM,EAAE,EAAE,CAAC;MACpD,OAAOP,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kDAAkDG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC7E,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAI,gBAAgB,EAAE,MAAOC,cAAc,IAAK;IAC1C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACc,IAAI,CAAC,cAAc,EAAED,cAAc,CAAC;MAC/D,OAAOT,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;MACpE,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAO,gBAAgB,EAAE,MAAAA,CAAOJ,EAAE,EAAEE,cAAc,KAAK;IAC9C,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMJ,GAAG,CAACgB,GAAG,CAAC,gBAAgBL,EAAE,EAAE,EAAEE,cAAc,CAAC;MACpE,OAAOT,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iDAAiDG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC5E,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAS,gBAAgB,EAAE,MAAON,EAAE,IAAK;IAC9B,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMJ,GAAG,CAACkB,MAAM,CAAC,gBAAgBP,EAAE,EAAE,CAAC;MACvD,OAAOP,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,iDAAiDG,EAAE,GAAG,EAAEH,KAAK,CAAC;MAC5E,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACAW,yBAAyB,EAAE,MAAOC,WAAW,IAAK;IAChD,IAAI;MACF,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACK,GAAG,CAAC,cAAc,EAAE;QAC7CC,MAAM,EAAE;UAAEe,YAAY,EAAED;QAAY;MACtC,CAAC,CAAC;MACF,OAAOhB,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oEAAoEY,WAAW,GAAG,EAAEZ,KAAK,CAAC;MACxG,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeP,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}